import streamlit as st
import requests
import time

API_URL = "http://fastapi:8000"

def show_admin_panel():
    st.title("–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üßë‚Äçüíª")

    # –†–∞–∑–¥–µ–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞–º–∏ –∑–∞–∫–∞–∑–æ–≤
    st.header("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞–º–∏ –∑–∞–∫–∞–∑–æ–≤")
    try:
        resp = requests.get(f"{API_URL}/admin/orders")
        resp.raise_for_status()
        orders = resp.json()
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤: {e}")
        return

    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–∫–∞–∑–æ–≤, –∏—Å–∫–ª—é—á–∞—è Completed
    pending_or_shipped_orders = [order for order in orders if order["status"] != "Completed"]

    if not pending_or_shipped_orders:
        st.warning("–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
    else:
        order_options = {f"–ó–∞–∫–∞–∑ #{order['order_id']} (–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {order['status']})": order for order in pending_or_shipped_orders}
        selected_order_name = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–∫–∞–∑ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:", options=order_options.keys())
        selected_order = order_options[selected_order_name]

        new_status = st.selectbox(
            f"–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #{selected_order['order_id']}:",
            options=["Pending", "Shipped", "Completed"],
            index=["Pending", "Shipped", "Completed"].index(selected_order["status"]),
            key=f"update_status_{selected_order['order_id']}"
        )

        if st.button("–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞"):
            try:
                resp = requests.put(
                    f"{API_URL}/admin/orders/{selected_order['order_id']}/status",
                    json={"status": new_status}
                )
                resp.raise_for_status()
                st.success(f"–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #{selected_order['order_id']} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ '{new_status}'.")
                time.sleep(1.5)
                st.rerun()
            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞: {e}")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
        if f"items_admin_{selected_order['order_id']}" not in st.session_state:
            st.session_state[f"items_admin_{selected_order['order_id']}"] = False

        if st.button(
            "–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–∫–∞–∑–∞",
            key=f"btn_items_admin_{selected_order['order_id']}"
        ):
            st.session_state[f"items_admin_{selected_order['order_id']}"] = not st.session_state[f"items_admin_{selected_order['order_id']}"]

        if st.session_state[f"items_admin_{selected_order['order_id']}"]:
            try:
                resp = requests.get(f"{API_URL}/admin/orders/{selected_order['order_id']}/items")
                resp.raise_for_status()
                order_items = resp.json()

                if not order_items:
                    st.info("–ó–∞–∫–∞–∑ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–≤–∞—Ä–æ–≤.")
                else:
                    st.write("### –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–∫–∞–∑–∞:")
                    for item in order_items:
                        st.write(f"- **{item['name']}**: {item['quantity']} —à—Ç. ‚Äî {item['price']} $")
            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞: {e}")

    st.divider()

    # –†–∞–∑–¥–µ–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    st.header("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if "show_users" not in st.session_state:
        st.session_state.show_users = False

    if st.button("–ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"):
        st.session_state.show_users = not st.session_state.show_users

    if st.session_state.show_users:
        try:
            resp = requests.get(f"{API_URL}/admin/users")
            resp.raise_for_status()
            users = resp.json()

            if not users:
                st.warning("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
            else:
                for user in users:
                    st.write(f"- **{user['email']}** (–†–æ–ª—å: {user['role']}, –ë–∞–ª–∞–Ω—Å: {user['balance']} $)")
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")