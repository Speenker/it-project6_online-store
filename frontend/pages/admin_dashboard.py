import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from datetime import datetime, timedelta
from services.analytics import (
    get_user_activity_analytics,
    get_error_analytics,
    get_user_behavior_analytics,
    get_financial_analytics,
    get_extended_financial_analytics
)

def show_dashboard():
    st.title("üìä –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –ø–∞–Ω–µ–ª—å")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    try:
        activity_data = get_user_activity_analytics()
        
        # –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ —á–∞—Å–∞–º
        st.subheader("–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —á–∞—Å–∞–º")
        df_hourly = pd.DataFrame(activity_data['hourly_activity'])
        if not df_hourly.empty:
            fig_hourly = px.line(df_hourly, x='hour', y='count',
                               title='–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ —á–∞—Å–∞–º',
                               labels={'count': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–π—Å—Ç–≤–∏–π', 'hour': '–ß–∞—Å'})
            st.plotly_chart(fig_hourly)
        else:
            st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ —á–∞—Å–∞–º")
        
        # –¢–æ–ø –¥–µ–π—Å—Ç–≤–∏–π
        st.subheader("–¢–æ–ø –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        df_actions = pd.DataFrame(activity_data['top_actions'])
        if not df_actions.empty:
            fig_actions = px.bar(df_actions, x='action', y='count',
                               title='–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è',
                               labels={'count': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', 'action': '–î–µ–π—Å—Ç–≤–∏–µ'})
            st.plotly_chart(fig_actions)
        else:
            st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –¥–µ–π—Å—Ç–≤–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        # –¢–æ–ø –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        st.subheader("–¢–æ–ø –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        df_users = pd.DataFrame(activity_data['top_users'])
        if not df_users.empty:
            fig_users = px.bar(df_users, x='email', y='count',
                             title='–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
                             labels={'count': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–π—Å—Ç–≤–∏–π', 'email': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'})
            st.plotly_chart(fig_users)
        else:
            st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö")
        
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {str(e)}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    try:
        financial_data = get_extended_financial_analytics()
        
        st.subheader("üìà –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")
        
        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞–∫–∞–∑–∞–º
        if financial_data['order_stats']:
            stats = financial_data['order_stats']
            col1, col2, col3, col4, col5 = st.columns(5)
            with col1:
                st.metric("–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤", stats['total_orders'])
            with col2:
                st.metric("–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞", f"{stats['total_revenue']:.2f} $")
            with col3:
                st.metric("–°—Ä–µ–¥–Ω–∏–π —á–µ–∫", f"{stats['avg_order_value']:.2f} $")
            with col4:
                st.metric("–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã", stats['completed_orders'])
            with col5:
                st.metric("–û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã", stats['cancelled_orders'])
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        if financial_data['category_stats']:
            st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
            df_categories = pd.DataFrame(financial_data['category_stats'])
            fig_categories = px.bar(df_categories, x='category', y='total_revenue',
                                  title='–í—ã—Ä—É—á–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º',
                                  labels={'total_revenue': '–í—ã—Ä—É—á–∫–∞ ($)', 'category': '–ö–∞—Ç–µ–≥–æ—Ä–∏—è'})
            st.plotly_chart(fig_categories)
            
            # –¢–∞–±–ª–∏—Ü–∞ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            st.dataframe(df_categories, use_container_width=True)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º
        if financial_data['product_stats']:
            st.subheader("–¢–æ–ø –ø—Ä–æ–¥–∞–≤–∞–µ–º—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
            df_products = pd.DataFrame(financial_data['product_stats'])
            
            # –ì—Ä–∞—Ñ–∏–∫ –≤—ã—Ä—É—á–∫–∏ –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º
            fig_products = px.bar(df_products, x='product', y='total_revenue',
                                title='–í—ã—Ä—É—á–∫–∞ –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º',
                                labels={'total_revenue': '–í—ã—Ä—É—á–∫–∞ ($)', 'product': '–ü—Ä–æ–¥—É–∫—Ç'})
            st.plotly_chart(fig_products)
            
            # –¢–∞–±–ª–∏—Ü–∞ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º
            st.dataframe(df_products, use_container_width=True)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–∫–∞–∑–æ–≤
        # if financial_data['hourly_stats']:
        #     st.subheader("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –ø–æ –≤—Ä–µ–º–µ–Ω–∏")
        #     df_hourly = pd.DataFrame(financial_data['hourly_stats'])
        #     df_hourly['hour'] = pd.to_datetime(df_hourly['hour']).dt.hour
            
        #     fig_hourly = px.line(df_hourly, x='hour', y='order_count',
        #                        title='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –ø–æ —á–∞—Å–∞–º',
        #                        labels={'order_count': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤', 'hour': '–ß–∞—Å'})
        #     st.plotly_chart(fig_hourly)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º
        if financial_data['customer_stats']:
            st.subheader("–¢–æ–ø –∫–ª–∏–µ–Ω—Ç–æ–≤")
            df_customers = pd.DataFrame(financial_data['customer_stats'])
            
            # –ì—Ä–∞—Ñ–∏–∫ –≤—ã—Ä—É—á–∫–∏ –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º
            fig_customers = px.bar(df_customers, x='email', y='total_spent',
                                 title='–í—ã—Ä—É—á–∫–∞ –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º',
                                 labels={'total_spent': '–°—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫ ($)', 'email': '–ö–ª–∏–µ–Ω—Ç'})
            st.plotly_chart(fig_customers)
            
            # –¢–∞–±–ª–∏—Ü–∞ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º
            st.dataframe(df_customers, use_container_width=True)
        
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {str(e)}")

if __name__ == "__main__":
    show_dashboard() 